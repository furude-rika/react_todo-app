{"version":3,"sources":["components/TodoItem/TodoItem.jsx","components/TodoList/TodoList.jsx","components/TodosFIlter/TodosFilter.jsx","App.js","index.js"],"names":["TodoItem","id","title","completed","editing","changeStatus","deleteTodo","onTodoEdit","changeTitle","useState","newTitle","setNewTitle","className","classNames","view","type","checked","onChange","onDoubleClick","onClick","value","event","target","onKeyDown","key","TodoList","todos","map","todo","defaultProps","TodosFilter","activeTodos","getTodos","clearCompleted","completedTodos","todosStatus","length","href","selected","FILTERS","App","setTodos","todoTitle","setTodoTitle","visibleTodos","setVisibleTodos","setTodosStatus","useEffect","localStorage","setItem","JSON","stringify","status","filter","onSubmit","preventDefault","placeholder","trim","Date","every","htmlFor","todoId","newTodos","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4ccf0c27.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\n\nexport const TodoItem = ({\n  id,\n  title,\n  completed,\n  editing,\n  changeStatus,\n  deleteTodo,\n  onTodoEdit,\n  changeTitle,\n}) => {\n  const [newTitle, setNewTitle] = useState(title);\n\n  return (\n    <li\n      className={classNames({\n        view: !completed,\n        completed,\n        editing,\n      })}\n    >\n      <div className=\"view\">\n        <input\n          type=\"checkbox\"\n          checked={completed}\n          className=\"toggle\"\n          onChange={() => {\n            changeStatus(id);\n          }}\n        />\n        <label\n          onDoubleClick={() => {\n            onTodoEdit(id);\n          }}\n        >\n          {title}\n        </label>\n        <button\n          type=\"button\"\n          className=\"destroy\"\n          onClick={() => {\n            deleteTodo(id);\n          }}\n        />\n      </div>\n      <input\n        type=\"text\"\n        className=\"edit\"\n        value={newTitle}\n        onChange={(event) => {\n          setNewTitle(event.target.value);\n        }}\n        onKeyDown={(event) => {\n          if (event.key === 'Enter') {\n            changeTitle(id, newTitle);\n\n            setNewTitle('');\n            onTodoEdit(id);\n          }\n\n          if (event.key === 'Escape') {\n            setNewTitle('');\n            onTodoEdit(id);\n          }\n        }}\n      />\n    </li>\n  );\n};\n\nTodoItem.propTypes = {\n  id: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired,\n  completed: PropTypes.bool.isRequired,\n  editing: PropTypes.bool.isRequired,\n  changeStatus: PropTypes.func.isRequired,\n  deleteTodo: PropTypes.func.isRequired,\n  onTodoEdit: PropTypes.func.isRequired,\n  changeTitle: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { TodoItem } from '../TodoItem';\n\nexport const TodoList = ({\n  todos,\n  changeStatus,\n  deleteTodo,\n  onTodoEdit,\n  changeTitle,\n}) => (\n  <ul className=\"todo-list\">\n    {todos.map(todo => (\n      <TodoItem\n        key={todo.id}\n        {...todo}\n        changeStatus={changeStatus}\n        deleteTodo={deleteTodo}\n        onTodoEdit={onTodoEdit}\n        changeTitle={changeTitle}\n      />\n    ))}\n  </ul>\n);\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n      completed: PropTypes.bool.isRequired,\n    }),\n  ),\n  changeStatus: PropTypes.func.isRequired,\n  deleteTodo: PropTypes.func.isRequired,\n  onTodoEdit: PropTypes.func.isRequired,\n  changeTitle: PropTypes.func.isRequired,\n};\n\nTodoList.defaultProps = {\n  todos: [],\n};\n","import React from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\n\nexport const TodosFilter = ({\n  activeTodos,\n  getTodos,\n  clearCompleted,\n  completedTodos,\n  todosStatus,\n}) => (\n  <>\n    <span className=\"todo-count\">\n      {`${activeTodos.length}\n        ${activeTodos.length !== 1 ? 'items' : 'item'} left`\n      }\n    </span>\n\n    <ul className=\"filters\">\n      <li>\n        <a\n          href=\"#/\"\n          className={classNames({\n            selected: todosStatus === 'all',\n          })}\n          onClick={() => getTodos('all')}\n        >\n          All\n        </a>\n      </li>\n\n      <li>\n        <a\n          href=\"#/active\"\n          className={classNames({\n            selected: todosStatus === 'active',\n          })}\n          onClick={() => getTodos('active')}\n        >\n          Active\n        </a>\n      </li>\n\n      <li>\n        <a\n          href=\"#/completed\"\n          className={classNames({\n            selected: todosStatus === 'completed',\n          })}\n          onClick={() => getTodos('completed')}\n        >\n          Completed\n        </a>\n      </li>\n    </ul>\n\n    {completedTodos.length > 0 && (\n      <button\n        type=\"button\"\n        className=\"clear-completed\"\n        onClick={() => {\n          clearCompleted();\n        }}\n      >\n        Clear completed\n      </button>\n    )}\n  </>\n);\n\nTodosFilter.propTypes = {\n  activeTodos: PropTypes.arrayOf(PropTypes.object),\n  getTodos: PropTypes.func.isRequired,\n  clearCompleted: PropTypes.func.isRequired,\n  completedTodos: PropTypes.arrayOf(PropTypes.object),\n  todosStatus: PropTypes.string.isRequired,\n};\n\nTodosFilter.defaultProps = {\n  activeTodos: [],\n  completedTodos: [],\n};\n","import React, { useState, useEffect } from 'react';\nimport { TodoList } from './components/TodoList';\nimport { TodosFilter } from './components/TodosFIlter';\n\nconst FILTERS = {\n  all: 'all',\n  completed: 'completed',\n  active: 'active',\n};\n\nfunction App() {\n  const [todos, setTodos] = useState([]);\n  const [todoTitle, setTodoTitle] = useState('');\n  const [visibleTodos, setVisibleTodos] = useState([]);\n  const [todosStatus, setTodosStatus] = useState('');\n\n  useEffect(() => {\n    setTodos(todos);\n    setVisibleTodos(todos);\n    localStorage.setItem('todos', JSON.stringify(todos));\n  }, [todos]);\n\n  const createTodo = (title) => {\n    setTodos([\n      ...todos,\n      {\n        title,\n        id: +new Date(),\n        completed: false,\n        editing: false,\n      },\n    ]);\n  };\n\n  const getTodos = (status) => {\n    switch (status) {\n      case FILTERS.all:\n        setVisibleTodos(todos);\n        setTodosStatus('all');\n        break;\n      case FILTERS.completed:\n        setVisibleTodos([...todos].filter(todo => todo.completed));\n        setTodosStatus('completed');\n        break;\n      case FILTERS.active:\n        setVisibleTodos([...todos].filter(todo => !todo.completed));\n        setTodosStatus('active');\n        break;\n      default:\n        break;\n    }\n  };\n\n  const changeTodoStatus = (todoId) => {\n    setTodos(todos.map((todo) => {\n      if (todo.id === todoId) {\n        return {\n          ...todo,\n          completed: !todo.completed,\n        };\n      }\n\n      return todo;\n    }));\n  };\n\n  const toggleAll = () => {\n    if (todos.every(todo => todo.completed)) {\n      setTodos(todos.map(todo => ({\n        ...todo,\n        completed: false,\n      })));\n    } else {\n      setTodos(todos.map(todo => ({\n        ...todo,\n        completed: true,\n      })));\n    }\n  };\n\n  const activeTodos = [...todos].filter(todo => !todo.completed);\n\n  const deleteTodo = (todoId) => {\n    setTodos([...todos].filter(todo => todo.id !== todoId));\n  };\n\n  const completedTodos = [...todos].filter(todo => todo.completed);\n\n  const clearCompleted = () => {\n    setTodos([...todos].filter(todo => !todo.completed));\n  };\n\n  const onTodoEdit = (todoId) => {\n    setTodos(todos.map((todo) => {\n      if (todo.id === todoId) {\n        return {\n          ...todo,\n          editing: !todo.editing,\n        };\n      }\n\n      return todo;\n    }));\n  };\n\n  const changeTitle = (todoId, newTitle) => {\n    const newTodos = todos.map((todo) => {\n      if (todo.id === todoId) {\n        return {\n          ...todo,\n          title: newTitle,\n        };\n      }\n\n      return todo;\n    });\n\n    setTodos(newTodos);\n  };\n\n  return (\n    <section className=\"todoapp\">\n      <header className=\"header\">\n        <h1>todos</h1>\n\n        <form\n          onSubmit={(event) => {\n            event.preventDefault();\n          }}\n        >\n          <input\n            type=\"text\"\n            className=\"new-todo\"\n            value={todoTitle}\n            placeholder=\"What needs to be done?\"\n            onChange={(event) => {\n              setTodoTitle(event.target.value);\n            }}\n            onKeyDown={(event) => {\n              if (event.key === 'Enter' && todoTitle.trim()) {\n                createTodo(todoTitle.trim());\n                setTodoTitle('');\n              }\n            }}\n          />\n        </form>\n      </header>\n\n      <section className=\"main\">\n        <input\n          type=\"checkbox\"\n          id=\"toggle-all\"\n          checked={todos.length > 0 && todos.every(todo => todo.completed)}\n          className=\"toggle-all\"\n          onChange={() => {\n            toggleAll();\n          }}\n        />\n        <label htmlFor=\"toggle-all\">Mark all as complete</label>\n\n        <TodoList\n          todos={visibleTodos}\n          changeStatus={changeTodoStatus}\n          deleteTodo={deleteTodo}\n          onTodoEdit={onTodoEdit}\n          changeTitle={changeTitle}\n          getTodos={getTodos}\n        />\n      </section>\n\n      {todos.length > 0 && (\n        <footer className=\"footer\">\n          <TodosFilter\n            activeTodos={activeTodos}\n            completedTodos={completedTodos}\n            getTodos={getTodos}\n            clearCompleted={clearCompleted}\n            todosStatus={todosStatus}\n          />\n        </footer>\n      )}\n    </section>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './styles/index.css';\nimport './styles/todo-list.css';\nimport './styles/filters.css';\n\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}