{"version":3,"sources":["components/TodoItem/TodoItem.jsx","components/TodoList/TodoList.jsx","components/TodosFIlter/TodosFilter.jsx","App.js","index.js"],"names":["TodoItem","id","title","completed","changeStatus","deleteTodo","changeTitle","useState","newTitle","setNewTitle","editing","setEditing","className","classNames","view","type","checked","onChange","onDoubleClick","onClick","value","event","target","onKeyDown","key","trim","TodoList","todos","map","todo","defaultProps","TodosFilter","activeTodos","clearCompleted","completedTodos","todosStatus","getTodos","length","href","selected","FILTERS","App","setTodos","visibleTodos","setVisibleTodos","todoTitle","setTodoTitle","setTodosStatus","useEffect","localStorage","setItem","JSON","stringify","filter","onSubmit","preventDefault","placeholder","Date","every","htmlFor","todoId","newTodos","status","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c5523205.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\n\nexport const TodoItem = ({\n  id,\n  title,\n  completed,\n  changeStatus,\n  deleteTodo,\n  changeTitle,\n}) => {\n  const [newTitle, setNewTitle] = useState(title);\n  const [editing, setEditing] = useState(false);\n\n  return (\n    <li\n      className={classNames({\n        view: !completed,\n        completed,\n        editing,\n      })}\n    >\n      <div className=\"view\">\n        <input\n          type=\"checkbox\"\n          checked={completed}\n          className=\"toggle\"\n          onChange={() => {\n            changeStatus(id);\n          }}\n        />\n        <label\n          onDoubleClick={() => {\n            setEditing(true);\n          }}\n        >\n          {title}\n        </label>\n        <button\n          type=\"button\"\n          className=\"destroy\"\n          onClick={() => {\n            deleteTodo(id);\n          }}\n        />\n      </div>\n      <input\n        type=\"text\"\n        className=\"edit\"\n        value={newTitle}\n        onChange={(event) => {\n          setNewTitle(event.target.value);\n        }}\n        onKeyDown={(event) => {\n          if (event.key === 'Enter' && newTitle.trim()) {\n            changeTitle(id, newTitle);\n\n            setNewTitle('');\n            setEditing(false);\n          }\n\n          if (event.key === 'Enter' && newTitle.trim() === '') {\n            deleteTodo(id);\n          }\n\n          if (event.key === 'Escape') {\n            setNewTitle('');\n            setEditing(false);\n          }\n        }}\n      />\n    </li>\n  );\n};\n\nTodoItem.propTypes = {\n  id: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired,\n  completed: PropTypes.bool.isRequired,\n  changeStatus: PropTypes.func.isRequired,\n  deleteTodo: PropTypes.func.isRequired,\n  changeTitle: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { TodoItem } from '../TodoItem';\n\nexport const TodoList = ({\n  todos,\n  changeStatus,\n  deleteTodo,\n  changeTitle,\n}) => (\n  <ul className=\"todo-list\">\n    {todos.map(todo => (\n      <TodoItem\n        key={todo.id}\n        {...todo}\n        changeStatus={changeStatus}\n        deleteTodo={deleteTodo}\n        changeTitle={changeTitle}\n      />\n    ))}\n  </ul>\n);\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n      completed: PropTypes.bool.isRequired,\n    }),\n  ),\n  changeStatus: PropTypes.func.isRequired,\n  deleteTodo: PropTypes.func.isRequired,\n  changeTitle: PropTypes.func.isRequired,\n};\n\nTodoList.defaultProps = {\n  todos: [],\n};\n","import React from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\n\nexport const TodosFilter = ({\n  activeTodos,\n  clearCompleted,\n  completedTodos,\n  todosStatus,\n  getTodos,\n}) => (\n  <>\n    <span className=\"todo-count\">\n      {`${activeTodos.length}\n        ${activeTodos.length !== 1 ? 'items' : 'item'} left`\n      }\n    </span>\n\n    <ul className=\"filters\">\n      <li>\n        <a\n          href=\"#/\"\n          className={classNames({\n            selected: todosStatus === 'all',\n          })}\n          onClick={() => getTodos('all')}\n        >\n          All\n        </a>\n      </li>\n\n      <li>\n        <a\n          href=\"#/active\"\n          className={classNames({\n            selected: todosStatus === 'active',\n          })}\n          onClick={() => getTodos('active')}\n        >\n          Active\n        </a>\n      </li>\n\n      <li>\n        <a\n          href=\"#/completed\"\n          className={classNames({\n            selected: todosStatus === 'completed',\n          })}\n          onClick={() => getTodos('completed')}\n        >\n          Completed\n        </a>\n      </li>\n    </ul>\n\n    {completedTodos.length > 0 && (\n      <button\n        type=\"button\"\n        className=\"clear-completed\"\n        onClick={() => {\n          clearCompleted();\n        }}\n      >\n        Clear completed\n      </button>\n    )}\n  </>\n);\n\nTodosFilter.propTypes = {\n  activeTodos: PropTypes.arrayOf(PropTypes.object),\n  clearCompleted: PropTypes.func.isRequired,\n  completedTodos: PropTypes.arrayOf(PropTypes.object),\n  todosStatus: PropTypes.string.isRequired,\n  getTodos: PropTypes.func.isRequired,\n};\n\nTodosFilter.defaultProps = {\n  activeTodos: [],\n  completedTodos: [],\n};\n","import React, { useState, useEffect } from 'react';\nimport { TodoList } from './components/TodoList';\nimport { TodosFilter } from './components/TodosFIlter';\n\nconst FILTERS = {\n  all: 'all',\n  completed: 'completed',\n  active: 'active',\n};\n\nfunction App() {\n  const [todos, setTodos] = useState([]);\n  const [visibleTodos, setVisibleTodos] = useState([]);\n  const [todoTitle, setTodoTitle] = useState('');\n  const [todosStatus, setTodosStatus] = useState('');\n\n  useEffect(() => {\n    setTodos(todos);\n    setVisibleTodos(todos);\n    localStorage.setItem('todos', JSON.stringify(todos));\n  }, [todos]);\n\n  const createTodo = (title) => {\n    setTodos([\n      ...todos,\n      {\n        title,\n        id: +new Date(),\n        completed: false,\n        editing: false,\n      },\n    ]);\n  };\n\n  const getTodos = (status) => {\n    switch (status) {\n      case FILTERS.all:\n        setVisibleTodos(todos);\n        setTodosStatus('all');\n        break;\n      case FILTERS.completed:\n        setVisibleTodos([...todos].filter(todo => todo.completed));\n        setTodosStatus('completed');\n        break;\n      case FILTERS.active:\n        setVisibleTodos([...todos].filter(todo => !todo.completed));\n        setTodosStatus('active');\n        break;\n      default:\n        break;\n    }\n  };\n\n  const changeTodoStatus = (todoId) => {\n    setTodos(todos.map((todo) => {\n      if (todo.id === todoId) {\n        return {\n          ...todo,\n          completed: !todo.completed,\n        };\n      }\n\n      return todo;\n    }));\n  };\n\n  const toggleAll = () => {\n    if (todos.every(todo => todo.completed)) {\n      setTodos(todos.map(todo => ({\n        ...todo,\n        completed: false,\n      })));\n    } else {\n      setTodos(todos.map(todo => ({\n        ...todo,\n        completed: true,\n      })));\n    }\n  };\n\n  const activeTodos = [...todos].filter(todo => !todo.completed);\n\n  const deleteTodo = (todoId) => {\n    setTodos([...todos].filter(todo => todo.id !== todoId));\n  };\n\n  const completedTodos = [...todos].filter(todo => todo.completed);\n\n  const clearCompleted = () => {\n    setTodos([...todos].filter(todo => !todo.completed));\n  };\n\n  const changeTitle = (todoId, newTitle) => {\n    const newTodos = todos.map((todo) => {\n      if (todo.id === todoId) {\n        return {\n          ...todo,\n          title: newTitle,\n        };\n      }\n\n      return todo;\n    });\n\n    setTodos(newTodos);\n  };\n\n  return (\n    <section className=\"todoapp\">\n      <header className=\"header\">\n        <h1>todos</h1>\n\n        <form\n          onSubmit={(event) => {\n            event.preventDefault();\n          }}\n        >\n          <input\n            type=\"text\"\n            className=\"new-todo\"\n            value={todoTitle}\n            placeholder=\"What needs to be done?\"\n            onChange={(event) => {\n              setTodoTitle(event.target.value);\n            }}\n            onKeyDown={(event) => {\n              if (event.key === 'Enter' && todoTitle.trim()) {\n                createTodo(todoTitle.trim());\n                setTodoTitle('');\n              }\n            }}\n          />\n        </form>\n      </header>\n\n      <section className=\"main\">\n        <input\n          type=\"checkbox\"\n          id=\"toggle-all\"\n          checked={todos.length > 0 && todos.every(todo => todo.completed)}\n          className=\"toggle-all\"\n          onChange={() => {\n            toggleAll();\n          }}\n        />\n        <label htmlFor=\"toggle-all\">Mark all as complete</label>\n\n        <TodoList\n          todos={visibleTodos}\n          changeStatus={changeTodoStatus}\n          deleteTodo={deleteTodo}\n          changeTitle={changeTitle}\n\n        />\n      </section>\n\n      {todos.length > 0 && (\n        <footer className=\"footer\">\n          <TodosFilter\n            activeTodos={activeTodos}\n            completedTodos={completedTodos}\n            clearCompleted={clearCompleted}\n            todosStatus={todosStatus}\n            getTodos={getTodos}\n          />\n        </footer>\n      )}\n    </section>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './styles/index.css';\nimport './styles/todo-list.css';\nimport './styles/filters.css';\n\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}